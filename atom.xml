<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>formulahendry</title>
  
  <subtitle>A Software Engineer @ Hongkou</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://formulahendry.github.io/"/>
  <updated>2020-04-22T02:06:37.630Z</updated>
  <id>https://formulahendry.github.io/</id>
  
  <author>
    <name>formulahendry</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo的版本控制与持续集成</title>
    <link href="https://formulahendry.github.io/2016/12/04/hexo-ci/"/>
    <id>https://formulahendry.github.io/2016/12/04/hexo-ci/</id>
    <published>2016-12-04T10:52:00.000Z</published>
    <updated>2020-04-22T02:06:37.630Z</updated>
    
    <content type="html"><![CDATA[<p>想必很多人会把Hexo生成出来的静态网站放到GitHub Pages来进行托管。一般发布Hexo博客的流程是，首先在本地搭建Hexo的环境，编写新文章，然后利用<code>hexo deploy</code>来发布到Git。那么对于本地的Hexo的原始文件怎么管理呢？如果换电脑了怎么办？如果没有对原始文件进行备份，突然有一天你的本地环境挂了导致源文件丢失，那不就呵呵了。也许你会想到用Dropbox或者其他方案来对源文件进行备份，但是每次更新完博客，需要备份好源文件，然后执行<code>hexo deploy</code>进行发布，是不是很麻烦？换了电脑之后又要重新搭建本地环境，是不是很蛋疼？</p><p>那么接下来我们就来说说如何优雅愉快地对我们的Hexo进行版本管理和发布。<br><a id="more"></a></p><p>既然我们已经用了GitHub来托管我们生成出来的静态网站，那么为什么不也把Hexo博客的源文件也host在GitHub上呢。那么问题来了，如果我们把Hexo博客的源文件托管在GitHub上，我们的发布流程就会变为：</p><ol><li>执行<code>git push</code>把更新的源文件push到托管源文件的GitHub Repo (我们称之为Source Repo)</li><li>执行<code>hexo deploy</code>来更新托管静态网站的GitHub Pages (我们称之为Content Repo)</li></ol><p>这样看来，每次更新博客要经历两个步骤，并不是那么straightforward。那么有没有办法做到既能使用GitHub进行版本控制，又能做到一键发布呢？</p><p>答案是肯定的。这里用到了<a href="https://en.wikipedia.org/wiki/Continuous_integration" target="_blank" rel="noopener">持续集成</a>也就是我们一直所说的CI来完成一键发布：当有新的change push到Source Repo时，自动执行CI脚本，生成最新的静态网站发布到Content Repo，一气呵成。那么我使用什么CI工具来做呢？我们可以使用像Travis CI这样的Hosted CI Service，也可以使用Jenkins或者TeamCity来搭建CI server。如果自己来搭建CI Server，费时费力，又要花钱来买Server来host CI service，肯定不是一个很好的选择。那么我们选哪个Hosted CI Service呢？其实今年在公司的一个项目中我们就选择了AppVeyor。当初在做investigation的时候，第一个想到的就是用Travis CI，然而我司大多数的开发环境都是Windows，而且当时的项目有Python, PowerShell, Java等，那时PowerShell还只支持Windows，所以需要选择一个支持Windows的CI Service。于是，Scott Hanselman安利的<a href="http://www.hanselman.com/blog/AppVeyorAGoodContinuousIntegrationSystemIsAJoyToBehold.aspx" target="_blank" rel="noopener">AppVeyor</a>就成为了一个备选。访问<a href="https://www.appveyor.com/" target="_blank" rel="noopener">AppVeyor官网</a>，映入眼帘的大标题就是<code>#1 Continuous Delivery service for Windows</code>。刚开始的时候内心一阵嘲笑，Top 10的CI Service就你支持Windows，你不是第一那谁是第一？结果在之后的项目使用中，发现AppVeyor比Travis CI好用太多。这里就不具体展开了，继续进入正题。</p><p>使用AppVeyor来建立CI非常方便，主要是以下步骤：</p><ol><li><p>注册并登陆AppVeyor</p><p>访问<a href="https://ci.appveyor.com/login" target="_blank" rel="noopener">AppVeyor登陆页面</a>，使用你的GitHub账号登陆即可。<br><img src="/assets/img/hexo-ci/appveyor-login.png" alt="login"></p></li><li><p>添加Project</p><p>在<a href="https://ci.appveyor.com/projects/new" target="_blank" rel="noopener">AppVeyor Projects页面</a>，添加相应的GitHub Source Repo。<br><img src="/assets/img/hexo-ci/appveyor-add-project.png" alt="add-project"></p></li><li><p>添加appveyor.yml到Source Repo</p><p>接下来，你需要把appveyor.yml添加到Source Repo的根目录下。具体的appveyor.yml如下，也可以参考我博客的<a href="https://github.com/formulahendry/formulahendry.github.io.source/blob/master/appveyor.yml" target="_blank" rel="noopener">appveyor.yml</a></p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">clone_depth:</span> <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="attr">environment:</span></span><br><span class="line"><span class="attr">access_token:</span></span><br><span class="line">    <span class="attr">secure:</span> <span class="string">[Your</span> <span class="string">GitHub</span> <span class="string">Access</span> <span class="string">Token]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">install:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">node</span> <span class="string">--version</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">npm</span> <span class="string">--version</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-cli</span> <span class="string">-g</span></span><br><span class="line"></span><br><span class="line"><span class="attr">build_script:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo</span> <span class="string">generate</span></span><br><span class="line"></span><br><span class="line"><span class="attr">artifacts:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">path:</span> <span class="string">public</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on_success:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">credential.helper</span> <span class="string">store</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">ps:</span> <span class="string">Add-Content</span> <span class="string">"$env:USERPROFILE\.git-credentials"</span> <span class="string">"https://$($env:access_token):x-oauth-basic@github.com`n"</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.email</span> <span class="string">"%GIT_USER_EMAIL%"</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.name</span> <span class="string">"%GIT_USER_NAME%"</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">git</span> <span class="string">clone</span> <span class="string">--depth</span> <span class="number">5</span> <span class="string">-q</span> <span class="string">--branch=%TARGET_BRANCH%</span> <span class="string">%STATIC_SITE_REPO%</span> <span class="string">%TEMP%\static-site</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">cd</span> <span class="string">%TEMP%\static-site</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">del</span> <span class="string">*</span> <span class="string">/f</span> <span class="string">/q</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">for</span> <span class="string">/d</span> <span class="string">%%p</span> <span class="string">IN</span> <span class="string">(*)</span> <span class="string">do</span> <span class="string">rmdir</span> <span class="string">"%%p"</span> <span class="string">/s</span> <span class="string">/q</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">SETLOCAL</span> <span class="string">EnableDelayedExpansion</span> <span class="string">&amp;</span> <span class="string">robocopy</span> <span class="string">"%APPVEYOR_BUILD_FOLDER%\public"</span> <span class="string">"%TEMP%\static-site"</span> <span class="string">/e</span> <span class="string">&amp;</span> <span class="string">IF</span> <span class="type">!ERRORLEVEL</span><span class="string">!</span> <span class="string">EQU</span> <span class="number">1</span> <span class="string">(exit</span> <span class="number">0</span><span class="string">)</span> <span class="string">ELSE</span> <span class="string">(IF</span> <span class="type">!ERRORLEVEL</span><span class="string">!</span> <span class="string">EQU</span> <span class="number">3</span> <span class="string">(exit</span> <span class="number">0</span><span class="string">)</span> <span class="string">ELSE</span> <span class="string">(exit</span> <span class="number">1</span><span class="string">))</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">git</span> <span class="string">add</span> <span class="string">-A</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">if</span> <span class="string">"%APPVEYOR_REPO_BRANCH%"</span><span class="string">=="master"</span> <span class="string">if</span> <span class="string">not</span> <span class="string">defined</span> <span class="string">APPVEYOR_PULL_REQUEST_NUMBER</span> <span class="string">(git</span> <span class="string">diff</span> <span class="string">--quiet</span> <span class="string">--exit-code</span> <span class="string">--cached</span> <span class="string">||</span> <span class="string">git</span> <span class="string">commit</span> <span class="string">-m</span> <span class="string">"Update Static Site"</span> <span class="string">&amp;&amp;</span> <span class="string">git</span> <span class="string">push</span> <span class="string">origin</span> <span class="string">%TARGET_BRANCH%</span> <span class="string">&amp;&amp;</span> <span class="string">appveyor</span> <span class="string">AddMessage</span> <span class="string">"Static Site Updated"</span><span class="string">)</span></span><br></pre></td></tr></table></figure><p>你唯一需要做的就是替换[Your GitHub Access Token]，关于生成Access Token，可以参考这篇<a href="https://help.github.com/articles/creating-an-access-token-for-command-line-use/" target="_blank" rel="noopener">文章</a>。在GitHub生成好Access Token之后，你需要到<a href="https://ci.appveyor.com/tools/encrypt" target="_blank" rel="noopener">AppVeyor加密页面</a>把Access Token加密之后再替换[Your GitHub Access Token]<br><img src="/assets/img/hexo-ci/appveyor-encrypt.png" alt="encrypt"></p></li><li><p>设置Appveyor</p><p>添加好appveyor.yml之后，再到Appveyor portal设置以下四个变量。STATIC_SITE_REPO就是Content Repo的地址，TARGET_BRANCH就是你Content Repo的branch，一般默认就是master，GIT_USER_EMAIL和GIT_USER_NAME就是你GitHub账号的信息。<br><img src="/assets/img/hexo-ci/appveyor-setting.png" alt="setting"></p></li></ol><p>好了，一切大功告成！试一下<code>git push</code>你的change到Source Repo，几分钟内，你的博客就自动更新了！</p><p>背后的过程如下:</p><ol><li>Git push to Source Repo </li><li>–&gt; AppVeyor CI </li><li>–&gt; Update GitHub Pages Content Repo </li><li>–&gt; Generate your Hexo blog site</li></ol><p>最后肯定会有人问，为什么不用Jekyll或者WordPress啊？为什么选Hexo呢？在下一篇博客中我将详细道来，敬请期待！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;想必很多人会把Hexo生成出来的静态网站放到GitHub Pages来进行托管。一般发布Hexo博客的流程是，首先在本地搭建Hexo的环境，编写新文章，然后利用&lt;code&gt;hexo deploy&lt;/code&gt;来发布到Git。那么对于本地的Hexo的原始文件怎么管理呢？如果换电脑了怎么办？如果没有对原始文件进行备份，突然有一天你的本地环境挂了导致源文件丢失，那不就呵呵了。也许你会想到用Dropbox或者其他方案来对源文件进行备份，但是每次更新完博客，需要备份好源文件，然后执行&lt;code&gt;hexo deploy&lt;/code&gt;进行发布，是不是很麻烦？换了电脑之后又要重新搭建本地环境，是不是很蛋疼？&lt;/p&gt;
&lt;p&gt;那么接下来我们就来说说如何优雅愉快地对我们的Hexo进行版本管理和发布。&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://formulahendry.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://formulahendry.github.io/tags/Hexo/"/>
    
      <category term="AppVeyor" scheme="https://formulahendry.github.io/tags/AppVeyor/"/>
    
      <category term="CI" scheme="https://formulahendry.github.io/tags/CI/"/>
    
      <category term="Git" scheme="https://formulahendry.github.io/tags/Git/"/>
    
  </entry>
  
</feed>
